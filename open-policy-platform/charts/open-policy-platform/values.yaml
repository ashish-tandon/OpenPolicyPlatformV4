# Default values for open-policy-platform
# This is optimized for QNAP deployment but can be used for any Kubernetes cluster

# Global settings
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: "qnap-nfs"
  domain: "openpolicy.local"
  adminDomain: "openpolicyadmin.local"

# Namespace configuration
namespace:
  create: true
  name: open-policy-platform

# Infrastructure Services
postgres:
  enabled: true
  image:
    repository: postgres
    tag: "15"
    pullPolicy: IfNotPresent
  auth:
    database: openpolicy
    username: openpolicy
    password: openpolicy123  # Change in production
  persistence:
    enabled: true
    size: 50Gi
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"

postgresTest:
  enabled: true
  image:
    repository: postgres
    tag: "15"
  auth:
    database: openpolicy_test
    username: openpolicy
    password: openpolicy123
  persistence:
    enabled: true
    size: 20Gi
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

redis:
  enabled: true
  image:
    repository: redis
    tag: "7-alpine"
  auth:
    enabled: false
  persistence:
    enabled: true
    size: 10Gi
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# Monitoring Stack
elasticsearch:
  enabled: true
  image:
    repository: docker.elastic.co/elasticsearch/elasticsearch
    tag: "8.11.0"
  replicas: 1
  persistence:
    enabled: true
    size: 30Gi
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"

kibana:
  enabled: true
  image:
    repository: docker.elastic.co/kibana/kibana
    tag: "8.11.0"
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

prometheus:
  enabled: true
  image:
    repository: prom/prometheus
    tag: "latest"
  persistence:
    enabled: true
    size: 20Gi
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

grafana:
  enabled: true
  image:
    repository: grafana/grafana
    tag: "latest"
  adminPassword: admin  # Change in production
  persistence:
    enabled: true
    size: 10Gi
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# API Gateway
apiGateway:
  enabled: true
  image:
    repository: openpolicy/api-gateway
    tag: "latest"
    pullPolicy: Always
  replicas: 2
  service:
    type: ClusterIP
    port: 9000
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70

# Core Services
services:
  authService:
    enabled: true
    image:
      repository: openpolicy/auth-service
      tag: "latest"
    replicas: 2
    port: 9002
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"

  configService:
    enabled: true
    image:
      repository: openpolicy/config-service
      tag: "latest"
    replicas: 1
    port: 9001
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "250m"

  policyService:
    enabled: true
    image:
      repository: openpolicy/policy-service
      tag: "latest"
    replicas: 2
    port: 9003
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"

  notificationService:
    enabled: true
    image:
      repository: openpolicy/notification-service
      tag: "latest"
    replicas: 1
    port: 9004
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"

  searchService:
    enabled: true
    image:
      repository: openpolicy/search-service
      tag: "latest"
    replicas: 2
    port: 9009
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"

  dashboardService:
    enabled: true
    image:
      repository: openpolicy/dashboard-service
      tag: "latest"
    replicas: 1
    port: 9010
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"

# Frontend Services
web:
  enabled: true
  image:
    repository: openpolicy/web
    tag: "latest"
  replicas: 2
  port: 3000
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"

adminDashboard:
  enabled: true
  image:
    repository: openpolicy/admin-dashboard
    tag: "latest"
  replicas: 1
  port: 3001
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"

# Nginx Ingress
nginx:
  enabled: true
  image:
    repository: nginx
    tag: "alpine"
  service:
    type: LoadBalancer
    port: 80
    httpsPort: 443
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: openpolicy.local
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: web
              port: 3000
        - path: /api
          pathType: Prefix
          backend:
            service:
              name: api-gateway
              port: 9000
    - host: openpolicyadmin.local
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: admin-dashboard
              port: 3001
        - path: /api
          pathType: Prefix
          backend:
            service:
              name: api-gateway
              port: 9000
  tls:
    - secretName: openpolicy-tls
      hosts:
        - openpolicy.local
        - openpolicyadmin.local

# Security settings
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# Network policies
networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress

# Resource quotas
resourceQuota:
  enabled: false
  hard:
    requests.cpu: "50"
    requests.memory: "50Gi"
    persistentvolumeclaims: "20"

# Pod disruption budgets
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# QNAP-specific settings
qnap:
  enabled: false
  nfs:
    server: "192.168.1.100"
    path: "/share/Container/open-policy-platform"
  containerStation:
    optimizations: true
    resourceLimits: true