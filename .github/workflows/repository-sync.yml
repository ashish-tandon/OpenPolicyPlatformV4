name: 🔄 Repository Synchronization & Multi-Environment Deployment

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'repositories/**'
      - '.github/workflows/repository-sync.yml'
      - 'environments/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to sync to'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - dev
        - test
        - prod

env:
  DEV_ENVIRONMENT: "laptop"
  TEST_ENVIRONMENT: "qnap-staging"
  PROD_ENVIRONMENT: "azure-production"
  REPO_SYNC_TOKEN: ${{ secrets.REPO_SYNC_TOKEN }}

jobs:
  sync-repositories:
    name: 🔄 Sync All Repositories
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout main repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.REPO_SYNC_TOKEN }}
        
    - name: 🔄 Sync core repository
      run: |
        echo "🔄 Syncing core repository..."
        # Sync to openpolicy-platform-v5-core
        # This will trigger CI/CD in the core repo
        
    - name: 🔄 Sync services repository
      run: |
        echo "🔄 Syncing services repository..."
        # Sync to openpolicy-platform-v5-services
        # This will trigger CI/CD in the services repo
        
    - name: 🔄 Sync web repository
      run: |
        echo "🔄 Syncing web repository..."
        # Sync to openpolicy-platform-v5-web
        # This will trigger CI/CD in the web repo
        
    - name: 🔄 Sync monitoring repository
      run: |
        echo "🔄 Syncing monitoring repository..."
        # Sync to openpolicy-platform-v5-monitoring
        # This will trigger CI/CD in the monitoring repo
        
    - name: 🔄 Sync deployment repository
      run: |
        echo "🔄 Syncing deployment repository..."
        # Sync to openpolicy-platform-v5-deployment
        # This will trigger CI/CD in the deployment repo
        
    - name: 🔄 Sync docs repository
      run: |
        echo "🔄 Syncing docs repository..."
        # Sync to openpolicy-platform-v5-docs
        # This will trigger CI/CD in the docs repo

  deploy-dev:
    name: 🖥️ Deploy to Dev (Laptop)
    runs-on: ubuntu-latest
    needs: [sync-repositories]
    if: github.ref == 'refs/heads/develop' || github.event.inputs.environment == 'dev' || github.event.inputs.environment == 'all'
    # environment: development
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔐 Setup SSH for Dev
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
        
    - name: 🚀 Deploy to Dev Laptop
      run: |
        echo "🖥️ Deploying to Dev environment (Laptop)..."
        # SSH to laptop and deploy
        ssh ${{ secrets.DEV_SSH_USER }}@${{ secrets.DEV_SSH_HOST }} << 'EOF'
          cd /path/to/openpolicy-platform
          git pull origin develop
          docker-compose -f docker-compose.complete.yml down
          docker-compose -f docker-compose.complete.yml up -d
          echo "✅ Dev deployment complete!"
        EOF
        
    - name: 🔍 Dev Health Check
      run: |
        echo "🔍 Running Dev health checks..."
        # Health check commands for dev environment

  deploy-test:
    name: 🧪 Deploy to Test (QNAP)
    runs-on: ubuntu-latest
    needs: [sync-repositories]
    if: github.ref == 'refs/heads/develop' || github.event.inputs.environment == 'test' || github.event.inputs.environment == 'all'
    # environment: staging
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔐 Setup SSH for QNAP
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.QNAP_SSH_PRIVATE_KEY }}
        
    - name: 🚀 Deploy to QNAP Staging
      run: |
        echo "🧪 Deploying to Test environment (QNAP)..."
        # SSH to QNAP and deploy
        ssh ${{ secrets.QNAP_SSH_USER }}@${{ secrets.QNAP_SSH_HOST }} << 'EOF'
          cd /share/Container/openpolicy-platform
          git pull origin develop
          docker-compose -f docker-compose.complete.yml down
          docker-compose -f docker-compose.complete.yml up -d
          echo "✅ Test deployment complete!"
        EOF
        
    - name: 🔍 Test Health Check
      run: |
        echo "🔍 Running Test health checks..."
        # Health check commands for QNAP environment

  deploy-prod:
    name: 🚀 Deploy to Production (Azure)
    runs-on: ubuntu-latest
    needs: [sync-repositories]
    if: github.ref == 'refs/heads/main' || github.event.inputs.environment == 'prod' || github.event.inputs.environment == 'all'
    # environment: production
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔐 Setup Azure credentials
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: 🚀 Deploy to Azure Production
      run: |
        echo "🚀 Deploying to Production environment (Azure)..."
        # Azure deployment commands
        az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_AKS_CLUSTER }}
        kubectl apply -f k8s/production/
        kubectl rollout restart deployment/openpolicy-platform
        
    - name: 🔍 Production Health Check
      run: |
        echo "🔍 Running Production health checks..."
        # Health check commands for Azure environment
        
    - name: 🏷️ Create Production Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Production Release v${{ github.run_number }}
        draft: false
        prerelease: false
